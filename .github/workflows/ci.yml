name: Tests master

on:
  # This avoids having duplicate builds for a pull request
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  ############################################################################
  # Close previous builds on the same branch
  ############################################################################
  cleanup-previous-runs:
    runs-on: ubuntu-latest
    steps:
    - uses: rokroskar/workflow-run-cleanup-action@master
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  ############################################################################
  # Lint jobs
  ############################################################################
  lint-py:
    name: Lint Python
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false 
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Check build skip
        shell: bash
        run: bash .github/scripts/check_skip.sh
      - name: Check python skip
        shell: bash
        run: .github/scripts/check_python_skip.sh
      - name: Cache pip
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py-3.8-pip-${{ hashFiles('**/setup.py') }}
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'
          architecture: 'x64'
      - name: Install python dependencies
        run: python -m pip install --editable .[test]
      - name: Show python environment
        run: |
          python --version
          python -m pip list
      - name: Run python lint
        run: pylint lektor

  lint-js:
    name: Lint JS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Check build skip
        shell: bash
        run: bash .github/scripts/check_skip.sh
      - name: Check js skip
        shell: bash
        run: bash .github/scripts/check_js_skip.sh
      - name: Cache node
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-13-${{ hashFiles('**/lektor/admin/package-lock.json') }}
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '13'
      - name: Install node dependencies
        run: |
          cd lektor/admin/
          npm install .
          npm run webpack
      - name: Show node environment
        run: |
          node --version
          npm --version
      - name: Run JS lint
        run: |
          cd lektor/admin/
          npm run lint

  ############################################################################
  # Smoke tests
  ############################################################################
  linux-smoke-node:
    name: Linux node${{ matrix.NODEJS_VERSION }} smoke test
    runs-on: ubuntu-latest
    env:
      CI: True
      NODEJS_VERSION: ${{ matrix.NODEJS_VERSION }}
    strategy:
      fail-fast: false 
      matrix:
        NODEJS_VERSION: ['13']
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Check build skip
        run: .github/scripts/skip.sh
      - name: Check js skip
        run: .github/scripts/check_js_skip.sh
      - name: Cache node
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.NODEJS_VERSION }}-${{ hashFiles('**/lektor/admin/package-lock.json') }}
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.NODEJS_VERSION }}
      - name: Install node dependencies
        run: |
          cd lektor/admin/
          npm install .
          npm run webpack
      - name: Show node environment
        run: |
          node --version
          npm --version

  linux-smoke-py:
    name: Linux py${{ matrix.PYTHON_VERSION }} smoke test
    runs-on: ubuntu-latest
    env:
      CI: True
      PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
    strategy:
      fail-fast: false 
      matrix:
        PYTHON_VERSION: ['3.8']
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Check build skip
        run: .github/scripts/skip.sh
      - name: Check js skip
        run: .github/scripts/check_python_skip.sh
      - name: Cache pip
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py-${{ matrix.PYTHON_VERSION }}-pip-${{ hashFiles('**/setup.py') }}
      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}
      - name: Install python dependencies
        run: |
          python -m pip install --editable .[test]
          python -m pip install codecov
      - name: Show python environment
        run: |
          python --version
          python -m pip list
      - name: Run python tests
        run: pytest . --tb=long -svv --cov=lektor
      - name: Publish coverage
        run: codecov -t 39974034-91d8-48d1-9698-de48e0667a09

  ############################################################################
  # Node tests
  ############################################################################
  linux-node:
    name: Linux node${{ matrix.NODEJS_VERSION }} tests
    runs-on: ubuntu-latest
    needs: linux-smoke-node
    env:
      CI: True
      NODEJS_VERSION: ${{ matrix.NODEJS_VERSION }}
    strategy:
      fail-fast: false 
      matrix:
        NODEJS_VERSION: ['10', '12']
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Check build skip
        run: .github/scripts/skip.sh
      - name: Check js skip
        run: .github/scripts/check_js_skip.sh
      - name: Cache node
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.NODEJS_VERSION }}-${{ hashFiles('**/lektor/admin/package-lock.json') }}
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.NODEJS_VERSION }}
      - name: Install node dependencies
        run: |
          cd lektor/admin/
          npm install .
          npm run webpack
      - name: Show node environment
        run: |
          node --version
          npm --version

  mac-node:
    name: Mac node${{ matrix.NODEJS_VERSION }} tests
    runs-on: macos-latest
    needs: linux-smoke-node
    env:
      CI: True
      NODEJS_VERSION: ${{ matrix.NODEJS_VERSION }}
    strategy:
      fail-fast: false 
      matrix:
        NODEJS_VERSION: ['13']
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Check build skip
        run: .github/scripts/skip.sh
      - name: Check python skip
        run: .github/scripts/check_js_skip.sh
      - name: Cache node
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.NODEJS_VERSION }}-${{ hashFiles('**/lektor/admin/package-lock.json') }}
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.NODEJS_VERSION }}
      - name: Install node dependencies
        run: |
          cd lektor/admin/
          npm install .
          npm run webpack
      - name: Show node environment
        run: |
          node --version
          npm --version

  win-node:
    name: Win node${{ matrix.NODEJS_VERSION }} tests
    runs-on: windows-latest
    needs: linux-smoke-node
    env:
      CI: True
      NODEJS_VERSION: ${{ matrix.NODEJS_VERSION }}
    strategy:
      fail-fast: false 
      matrix:
        NODEJS_VERSION: ['13']
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Check build skip
        run: .github/scripts/skip.sh
      - name: Check python skip
        run: .github/scripts/check_js_skip.sh
      - name: Cache node
        uses: actions/cache@v1
        with:
          path: ~\AppData\Roaming\npm-cache
          key: ${{ runner.os }}-node-${{ matrix.NODEJS_VERSION }}-${{ hashFiles('**\lektor\admin\package-lock.json') }}
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.NODEJS_VERSION }}
      - name: Install node dependencies
        run: |
          cd lektor/admin/
          npm install .
          npm run webpack
      - name: Show node environment
        run: |
          node --version
          npm --version

  ############################################################################
  # Python tests
  ############################################################################
  linux-py:
    name: Linux py${{ matrix.PYTHON_VERSION }} tests
    runs-on: ubuntu-latest
    needs: linux-smoke-py
    env:
      CI: True
      PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
    strategy:
      fail-fast: false 
      matrix:
        PYTHON_VERSION: ['2.7', '3.5', '3.6', '3.7']
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Check build skip
        run: .github/scripts/skip.sh
      - name: Check python skip
        run: .github/scripts/check_python_skip.sh
      - name: Cache pip
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py-${{ matrix.PYTHON_VERSION }}-pip-${{ hashFiles('**/setup.py') }}
      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}
      - name: Install python dependencies
        run: |
          python -m pip install --editable .[test]
          python -m pip install codecov
      - name: Show python environment
        run: |
          python --version
          python -m pip list
      - name: Run python tests
        run: pytest . --tb=long -svv --cov=lektor
      - name: Publish coverage
        run: codecov -t 39974034-91d8-48d1-9698-de48e0667a09


  mac-py:
    name: Mac py${{ matrix.PYTHON_VERSION }} tests
    runs-on: macos-latest
    needs: linux-smoke-py
    env:
      CI: True
      PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
    strategy:
      fail-fast: false 
      matrix:
        PYTHON_VERSION: ['2.7', '3.5', '3.8']
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Check build skip
        run: .github/scripts/skip.sh
      - name: Check python skip
        run: .github/scripts/check_python_skip.sh
      - name: Cache pip
        uses: actions/cache@v1
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-py-${{ matrix.PYTHON_VERSION }}-pip-${{ hashFiles('**/setup.py') }}
      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}
      - name: Install system dependencies
        run: |
          brew update
          brew install imagemagick
          brew install ffmpeg
      - name: Install python dependencies
        run: |
          python -m pip install --editable .[test]
          python -m pip install codecov
      - name: Show python environment
        run: |
          python --version
          python -m pip list
      - name: Run python tests
        run: pytest . --tb=long -svv --cov=lektor
      - name: Publish coverage
        run: codecov -t 39974034-91d8-48d1-9698-de48e0667a09


  win-py:
    name: Win py${{ matrix.PYTHON_VERSION }} tests
    runs-on: windows-latest
    needs: linux-smoke-py
    env:
      CI: True
      PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
    strategy:
      fail-fast: false 
      matrix:
        PYTHON_VERSION: ['2.7', '3.5', '3.8']
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Check build skip
        run: .github/scripts/skip.sh
      - name: Check python skip
        run: .github/scripts/check_python_skip.sh
      - name: Cache pip
        uses: actions/cache@v1
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-py-${{ matrix.PYTHON_VERSION }}-pip-${{ hashFiles('**\setup.py') }}
      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}
      - name: Install system dependencies
        run: |
          choco install --timeout 600 imagemagick.tool
          choco install --timeout 600 ffmpeg
      - name: Install python dependencies
        run: |
          python -m pip install --editable .[test]
          python -m pip install codecov
      - name: Show python environment
        run: |
          python --version
          python -m pip list
      - name: Run python tests
        run: pytest . --tb=long -svv --cov=lektor
      - name: Publish coverage
        run: codecov -t 39974034-91d8-48d1-9698-de48e0667a09
