[tox]
minversion = 3.28
requires =
    # https://tox.wiki/en/4.9.0/faq.html#testing-end-of-life-python-versions
    virtualenv<20.22.0
    tox-gh-actions
# needed for tox3 (when running under py36)
isolated_build = true

envlist = lint,py36,py37,py38,py39,py310,py311,py312{,-noutils}

[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312

[testenv]
# workaround pip-cache issues when running 'tox parallel' (py37+)
download = true
commands = pytest --cov={envsitepackagesdir}/lektor {posargs:tests -ra}
passenv = USERNAME
setenv =
    # Use per-testenv coverage files to prevent contention when parallel
    # tests (using `tox -p`)
    COVERAGE_FILE=.coverage.{envname}
    # workaround pip-cache issues when running 'tox parallel' (py36)
    py36: PIP_CACHE_DIR={envtmpdir}{/}pip-cache
deps =
    pytest>=6
    pytest-click
    pytest-cov
    pytest-mock
    coverage[toml]

[testenv:py{37,38,39,310,311}-noutils]
# To test in environment without external utitilities like imagemagick and git installed,
# break PATH in noutils environment(s).
allowlist_externals = env
commands =
    env PATH="{envbindir}" pytest --cov={envsitepackagesdir}/lektor {posargs:tests -ra}

[testenv:lint]
# pylint==2.11.1 (pinned below) will only run with python <=3.10
base_python = py310
deps =
    pylint==2.11.1
    pytest>=6
commands =
    pylint {posargs:lektor tests}

[testenv:build-dist]
skip_install = true
deps =
    build
    twine
commands =
    python -m build .
    twine check dist/*

[flake8]
max-line-length = 91
extend-ignore =
    # E203: Whitespace before ':'
    E203,
    # E402: Module level import not at top of file
    E402
